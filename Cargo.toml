[workspace]
resolver = "2"
members = [
    # runtime
     "parachain/runtimes/gargantua",
     "parachain/runtimes/messier",

     # node
     "parachain/node",

     # ismp
     "parachain/modules/ismp/pallet",
     "parachain/modules/ismp/core",
     "parachain/modules/ismp/rpc",
     "parachain/modules/ismp/runtime-api",
     "parachain/modules/ismp/demo",
     "parachain/modules/ismp/core",
     "parachain/modules/ismp/testsuite",
     "parachain/modules/ismp/sync-committee",
     "parachain/modules/ismp/casper-ffg",

     # modules
     "parachain/modules/ismp/state-machine",
     "parachain/modules/tries/ethereum",
     "parachain/modules/consensus/sync-committee/prover",
     "parachain/modules/consensus/sync-committee/verifier",
     "parachain/modules/consensus/sync-committee/primitives",

     # evm tests
#     "evm/forge"
]
exclude = [
     "evm/forge"
]

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.4.1"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "powershell", "npm"]
# A GitHub repo to push Homebrew formulas to
tap = "polytope-labs/hyperbridge"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu", "aarch64-apple-darwin", "x86_64-apple-darwin"]
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# A namespace to use when publishing this package to the npm registry
npm-scope = "@polytope-labs"
# Publish jobs to run in CI
publish-jobs = []
# Publish jobs to run in CI
pr-run-mode = "skip"
allow-dirty = ["ci", "msi"]
# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
