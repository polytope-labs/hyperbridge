// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.17;

import "forge-std/Test.sol";
import {KusamaVerifier} from "../src/consensus/verifiers/KusamaVerifier.sol";
import {PolkadotVerifier} from "../src/consensus/verifiers/PolkadotVerifier.sol";
import {RococoVerifier} from "../src/consensus/verifiers/RococoVerifier.sol";
import {ZkBeefyV1} from "../src/consensus/ZkBeefy.sol";

contract PlonkTest is Test {
    KusamaVerifier internal kusama;
    PolkadotVerifier internal polkadot;
    RococoVerifier internal rococo;

    function setUp() public virtual {
        kusama = new KusamaVerifier();
        polkadot = new PolkadotVerifier();
        rococo = new RococoVerifier();
    }

    function testKusamaVerifier() public view {
        bytes memory proof =
            hex"1df9452144aa7b7d66c55bae5bd5eab85ee066acabbd4d2c8b0827188407aa0527d806c08671968e4462a856e6aa668ae3d945419c49dc113534c47e4284fd8e206b54ac92c850ad33d3000417827da20b53c7d74d506ad3ece5cf752a69cc4b029511fdf73fdcc45e13821abb8d74da38a5e55ce52eeb781958109cb5042b50212d66680e7f0da498967c3e0d87ae6ec3b9efa1993c05ed3986b98a5b93ad6f07a59886044c1a82b7a220e0f99f965a10afabe60e3464416e580ba3d2ec18e61bdf48f16665ca9db54254554abe9b896943d630f46adf2fa9ffebaa023708e827584edcdb771402e92b18c6590363dca7fd1763aedf0c694b66cc700742cb1e1389fb2fe05cf0b670ce5712cb644d8e3098d2cd3ee5d6e014efd08c63b0db120c24a785a773b50ea9bd21511863df16efb2201e5e3db55c5493bc3746767e822a61d67f17c4b758bdeeb3bde4b384dfb890b5ab8e019de21c51f3f2816f18501ea53254fe46428d493a83f78eb350f7c838eaff870e79567dfa7ccd7f47d4602f0d9770c520576030b69a7d64d6f4fe2a47b34f5eadf349b201e21fe5718dd20287e4185990dc46b7378124a4336c1cc3eb80eef7bada17f72d744e44d838410c94fc09a3f69d7ccd3404ef352c15fb4e9e9975de20677f6fb9df9dcfc939bc1e816c7cc1c62f804c73cbe42f6bc2551dd4aa31a44d895a4aa33bdc199fe2f7057c2a9884f8490e04582f39529d618ac7e6bcbdebd8173c0ae286fdeadbbbb81dfe6ad80e3fb25848790697a46eec429732c10c54e1ab00fcffdb6768e69c6825440e19e51d791737a8bfaeb81738eece3e7d316859d9b4020792e0a77a206011263430e1f286bd25edd470b17a846fe55ad538624ed8dd5e1e7eb64157722e1cd75a7c8f2a5792293ed7dca487abc69ffd3b1e2c54fab76827a342be69491f063d704aa84ec3f869c54e85a95bd4e3b1a5c750256a32bc944383c8278ae7cc11401a7ad8dc603e6f032dd3296f5680cfe893cd55d1ea38928d781dd5dbac9c2d1577d9516c08ade4a876b5548e7db28546ab0c572ab43040ba6ee37e950d57148a872d8048e403a62ab3f490958ab34bfdef04486e17d8aa36e533218ebde303834d81ec1a8a148d7a28d5326c2d55a79752068d91914b72bf6a8c79d755b70a4686c06f4f5c9b221035070815f3184964374bffb0db1e42d15c0d4b9e397003ae19a010f9407166adb046208620a7c4ab3170356331f024f7fec9b1aa742d29a492f6697489b5b103fb047543bcab1f9d07f3176f1a08d6c075239117e4740801859151972d764e76d8857439b79e8198a5a177eaab243c5cefa402ca6ff51dafa15898b80a69b46bfdca8d9be5cd7c62637c3b9e0f1ae27976eb0e1475d31e2417d56c50b78815c56b1e6f8f47c601722e167cfbc13a7064128d624ad9891cd6fae2f4a958e8b882e0597ed11290229cfc38bd36d44de76d9edada6331a90e2b192492448b014b5842e33cf4a67c76defeffe57cfacb27a443979ace513405a5fd41d1683c98fef0a8274f10c9990e79e5ffe19316e3341c2b1310dfa3b121de8b32cc89a65dd968bfdf94c85783d55756934d92b55ac1413bc0e5d7f94220a98ff92da395460b868274bf87910e507f7ebc02fc615379ae4c6c4e0455ac08d596e12a44d5e86b99c8419f77944c406befbd7296d882f4a93af35b7030262a6556d55bef040ca123279e7fd0963d636f48a0d47fe814db3b84f919b261a41b1d61bcd284f62994a70ef950cdf74a73abb70e76b59d9aec569a09e4b46bb20a5e34d45f105277d0260e21884f98af40d9da0d1d9a3220719e60095fc83e83113e9fd549a576807cb93ea04bf9072f077c7d88b076d4dc9f0f5aaed54a5b930a63ea9d771ec2fb2aea2f95ffba37df5ba9b4be9b983d182306d4474e9c64aa0d03d2da8486832ee59c26272e3e4517964dcb334ec8309d5dce6f672cd7cb4d1dfe23a0b1662f2a2126d655abcb11005d547cd84db87f1874035b2be896fcb10dac200685494586b40f77bfbc3f6fa1aa1e6d74f2bc3f0c1ad87588a69cfcd52c68bc3058744f79a791f3ddfd7d231cf2a8292e4787a4b1cd8138140b8190a51d27f0e604923d5779cd79a0e48a0eac76b303b51523f8f38f945867f3a4ec4e1ef197deed9172f0395761e3dbbe49462e7dbe56f6964ed0c6f7cd26d920138e2dae5eb7c3cde467402c23937609b609ae7d58b5a406177109a32777ae384fd62975ed677313915843557a0129f6c075201ce4921930d770ab8c57d3e87d48b42614eed9de5c1251793784bf9eb5b547a9a08435ef9fcaf109799ff84100721600ed6cac1e8cc74b6dc3f00f813b67fefb8ecc42d11ce6b5a149a44548e2cde01e13cbd2c684c2a1638ae5a6713bf1dfa52d31cc0d944d7768662e296dcad62e2314a38e3f8b728b8ca067751ebe7b8b64610e0d1aca2f5493f0e9b9b5e2f99c1971f27891e9a734bc8606d28f31a9878a0973c50d65fcaa7df1de53568538232caee0b84a22415e6e8bd6bd40d4980de89120e4f4c319af9eab1c75d84d59d1080b8dc7bc1109b8bb124b6ca7c92d3049d3572dbc47b860bf6838d0e0e9eb2417d4bdd49bd6cf79c49d8f0faaef90151f6065e5a4249a4961446a029fd3aca30b825ad17f2cac2b9d90fedb532853070f8e227e2c29df09f961b1d323aada9410e71d245af0c24e47ef2f8056ab50e1b28b65eee25314f8d126882811ec49b4247f8a94d6a02d6ac6c8dc189057c6a7ca0d11c627e7d380ececbfc6b8f5895b0e9e851f9c6c9fc00a8516fdeefc6317ead90b78f40404c45335f07701c9f089246433b0f08f60c08a949432b443fb55d88879c54aa8385a0fa6a7042fa380a51c26bec4cc68f26d190ca24efe73dc0b3204fffa3eeca2c14fbab4230dfc80ad021b9e8c113eb417ba22469ba46f1bd328ebba08144b4d6c79b0f5995787cfaa052c22344c552863bdc45d639393088ff16af3a12945374a9b5b82bd0e5caefb";

        bytes32[] memory inputs = new bytes32[](4);

        // msg
        inputs[0] = bytes32(0x000000000000000000000000000000003d2fc8e85afd38a3b23610fae5cbcbf4);
        inputs[1] = bytes32(0x0000000000000000000000000000000024ab7ba5c4b5df37241e921e4b2fb164);

        // root
        inputs[2] = bytes32(0x00000000000000000000000000000000ad19f07c487a8497b6e4f1e9296c3634);
        inputs[3] = bytes32(0x0000000000000000000000000000000048a3f47bf8d72c875d822fc36d306d4f);

        require(kusama.verify(proof, inputs), "Plonk: Invalid Proof");
    }

    function testPolkadotVerifier() public view {
        bytes memory proof =
            hex"0ba98eea0ea247a15110312baa8aa33fcd6d2596c7e4b870632d28e71ed148d20d3e59a6619d8f196e9b32ebb3525a75ac443eae728b96ea98abb186740886012374d5ffa3481552378e9865fbd214a8f370531cb0d7effe5b06c98deb054fe92043c5ac63292adba5a1c8328772ed7e27af7b057e7da53693e9d6dfeb7da61803a267efbd58f6331bf87ac62efa15979d77a590c1fb2c1967448c507bd877d201522a1b6d56d11f102fa8cb9a619c1b5fa6142b05a6623c6d7a716f940c7e75175a3e4d85622fc1464e7364a00ff48e98a583efd7252223763cc0bb1af4e84826cff465b10ffa6fc63e8215d14e49c1ffc7b9aa25beb481604e7510872c970225b24028aa31ed9bea927ca6753c8c1bfd9c9bef2b4de6e1c38686d10a1128870504f0628180124763f25ea8ec529bb47069d327e991e14d641207f3eea5255c030d5b8220a4b8ced3137aafcd2c40b1ecb316d764e4b01c05416c8b0fe7de2a16429c015a6161a4dfd9398b25d0f98f22f1f7553cd85f2a8e049809422a0b8c0c3a917c02104b5b4e359638375d2725770cf1f5111893bb8fea564a07a9748f0414f3ce8f012f3a6e7a795cd2e316c7855edc37f53fa8419928c0adf8f5503a29511c3dc9778faf9d78e7d25e9beff1e0259a9b26cd609b85b5a20808b0c5bc10effa4ea415b410ab53b3f5c9b0efddf0d6cb3c4d2dccd24497408c9b53e68810276d75c7d2098f577d7219b492e333fbc070d81a3085e2bdf1858d5167b0d707c413c57079b10e26c125dc85dc8dc08a8346bb6b2d6b8330198d3a127177a11a02a418f66590923f926d92777c968620c16f840578beb1f016a86a586ba94308773408efd0210a328daab4a9662bcf5acac5811fa11798157b3976f5fab3a3129ea4643d6cfcb32ae7218cca01b4041f13cdab3f2e6e961eb056964868095927006c9698d02ce3225635c8767a5c56df487003b602c0e728167f7865f36e0b0c4d759aad674d9ef218787fd536fdaa41ef9e01916444b1fd60f8d0acef82f301c3eafe2262ca5b89679143f5d91e2cba3e8557f07a1f224769917e56ed6ed8078fc2d3cb15032be7d96437465a186a024c2611796628cd217eb5b61da68f641178abedb8af6a3e8fd5c4fb13ab86589ce796c5049d65f55cba869cee806750162bf621a2b3752a68fbf7f39fcb9ed4d2dab69c27ce0b22f3840f190ee10afe29a068c524550f6e18c90e4c654a0dc64cd8ff5ddccab9c07fc5ae348150534f0ca618a9df817a99da4f09a739ffa6c9a118e8edb1dd93247791b2c2f077050215cac8d49540e063ac38b1eddddbffbfa71331dec74cf1185c3bd90de9f3207e098a3cb8fa72444a09b791fc75beaf791a676b437bdbca83eecf25d4f96e1b8405db7cf37a12c86df2e566d16a37eb963223744fa5704ddf5491105ff40f693f2b0dea02d2a954df77c33352219223664b4bd3fbd49dc3ff1c16761b2b1617322882b35256f5db1e5f265a029db1b228282efb21f7dbfe50709717ef4110a94607813001c361e7f0ea16d3ecc1c2b0123faec9ccff94efbd4eba1b396ed901a7210aabf44d1e927ca8d4f6ce6208ac59cf3eb800de517f1640b5511004499167264a5f0a00f8fdf8f2cf83b7b8587c3f24814f5f6b893bb818a8fcb2dcf9a5b30763d2fd5c1179380eff6d351247f6cff3aa8af179382a337fffe647baf09af321d29be2389dffe9075987a27ddd17be1ff3c3f25410ccc2bff0a6e4f5b45fcb10eaee8854a50931cb8d3986d498413fb4139dd514707307b745e1768d5230a10fdaf494017562a212d2a6c302152da413e4cc112c8ba7428ad71d22b43f5a861708ca9e1a261183c9c8a70811c5af26279d44dc19858255b6dfaeee72daef690af73ade7103c14021643b43f9a655f9044bc1e2c6e19223cebbcf85ca04698009e7d6c537a1e544a769b842f451285e2087a7935c0ad5b993e460254c4bb8041564606a23ce14b90963b3584a2e296d37193a593965dad2b1b15af9ab7f204f1ecf4be4adba67a7a45f4364f6fef8b1ee70b0a77fe5c621b6a7f680f38be5410d76abbe4637e454317f585aefa96b37960ea000757cd72d3b712dca2edb6908147293266ea3f56f5ceca150bd3bcd25ca0f274d1bbe577f421826f2d25b4d1c0ae6c87adb92a9e4027383341eb030baef7f91c701779a5aefacbadc4f2b144c10bc70d52c4d753342195bf219dabcae14913f9e3e3a99228f581ee9a2f8b43215d4e9899b65c3864db43e7f3149153d2bb8d0111f2a63e402186eaf2d55d7402626e6971ecb75b9a658ac72780686e1a017a414ef2a81d4ca0db7a02d88c25a0a68b186eb6c9f98872d0952c801fcfd27572497db84791ae3a25747ab14cfcd180953de8bf13117a2bab7afbe3ffdce9cf9ae66c0cdbe105802d2856cbee3a120772ad01dbfddc89c439aef2161b5f3c1272d3041aa3ddd9a9281d52a5f393104cf03eb27901df454dbaebc249d496c5e8b4460cb81567d0d9f3ce4e5437c6a1de2feff3062e2f387a61a6ce08678c15fadeed8c7a7a4d329372e4ee811125210db5f15364afc0b05d771ce2697a113935b2d9b4551089ff0acfd54eaa6b35e0d12ad06c38e46f7af2b8d72d79d32078441195f43ae5aa01e9da97b4f077ecc1d052f61554defa55a0b8ee900a3a08fa8c4ffeb525dc2265da1b363b4f0f6a02cbe2470d698ca3fbcb32035557dc8ffdaaca0591877e73a01506adb631084381efd20f4ba9ec84f5a2c1c2a7342c17adb3f4c04b39f2f22f3df1c593eee86441a646b37215e11671362fdbacfcdab270ce6951d0d4d60742562f3485076e77728f65949583c6cef9653621f607d1cf3d739cffa23b7a895a09439a6e58d353c20575283587c39a4791a8c0ad766c4402f1b4ad5daea8c8f0145f59f2772270e03db47b748faea2775c1ac1126fffc2ab697fdabfd717885519ae75ea66e33cd254271d9b9b649857e1d1d4764731fd4a535d582db3560ccfd4c529a92ef8c09";

        bytes32[] memory inputs = new bytes32[](4);

        // msg
        inputs[0] = bytes32(0x00000000000000000000000000000000232349c992ac70f35f0b1c8bce9757aa);
        inputs[1] = bytes32(0x00000000000000000000000000000000f94eed6d65dbbeb804885eede3da5404);

        // root
        inputs[2] = bytes32(0x00000000000000000000000000000000f44b9bb5380950104c979e61da7a7930);
        inputs[3] = bytes32(0x0000000000000000000000000000000029ca7d8f5229bf990a1f9bbe97fbf01e);

        require(polkadot.verify(proof, inputs), "Plonk: Invalid Proof");
    }

    function testRococoVerifier() public view {
        bytes memory proof =
            hex"10ae884942b1964571688fca692a9ea03aeadc986e5aa3f91eb59cde45280a9d23a8797ed43383891b988647b4de7532ca817b2347cd079f3aaac88697a3dfeb14b39c4b7ae6307a921c6cd9b3c52585cb258df9b7424a37e6e7accf16d2359d12055476a4bdb88d2b396e0689fc48d74aef606a0ca4893649c8fcecbc855330049ba21bd3822cee4c88145794e1e7fe7f4675675f40b5dc0792cdb750ab77b31319afcfb1751c285c413202ce54896374646062f7bd54d7c198a31499d00806221b5e9234959c9491774805c3a60809260f837564bb9ab3a20f19b2c819a4f71c396504ded562bda72627e44ce990c5f76ca51b2f51a424c607c82b2fd156b60ebaf4de9484bb45f04488fec541cab12d5f5aea16876822b4ff0797bc1991a00c7e9dd0cea18f128fa8575d9575259281d24c2119c9f91c41a38045374f300a0a68847c3c104b80ed0071f1957e0173c79c7b32fea8ab2b4c47ad4e520253e7245807ccc817d93029c3cd30e57d09a9bd5e651c994844218e482baa7417a35826e063a37f0e1b3536e384956dd1d73f6bd7d044708962977f77f886af7cca7a1a526e107848d484b50fd358dbe4098660e84adc317b86aec941ef7ad901a32d1a01e4e328022b6e37aaa428e58e87ec221deac4bb814303c8ceed4b0ce844e914053f820ec8c027fc11f687ee3adf02c1716b07104e98a28b7cd4bf8d961e620143f57cb801e83bbe4f1e6b559ed720210e5772169ae4b8ecd51c13a8e763da0bfba0335b7c7f57d0cef4dcca76f66d7203aa54e10a4736849c835193ae075723fa2bc26cb273dab6537f672fa705af538977ea08ff6ba1dfc492d0639e5ff604735d5aac329924d3bf6b19ad8901ab4a8b8090218d113dd451c35b5ebeb0d12eb344305e21dc195170a1d31ca36dad41f009a86f8b62f402c162f8db0986512dd937da8f3da699ad044c684cae2babf517bf3ffba7a71ee3ea79103fa87ebd06597274acac63df25d087bb8a2414ada5454fb77a847cb37acbc7a22557ab6e17a836e13c727b6ae07b892d607e85c574b79d4e07a0b6e9fa9b9be00ee1d6762008f13f20c75227fc546e15fead0747a0ef03c37e6605c1351798520f5337012db8dc7e7083149c91ecec2e32169acdac2abe338d9f70a0d77f21a933b848b2246cca63cac82515a5300c11585411a4a8d737112d7b3d539a1278d5cca976c60cfbb4de178d28e6ee6c6a514f0dfa315ed02866431f8543b117613fd542328725e4d6747abf0207361ac75b5df0d18e43d9b61f209f100b7670337070e6c9b208a630b20a6963ff9fd6043de8fc11c0c4e2d4860fc34215c49db1e033c9dc761ae7b93541ce6eacd88d3493fef19043282c0b097f975a2b14734760e62fe897104583d01e616500a37551bdd51ee22f322cd81a0338f67eef84f5cc96c668352cdfba05670841feb18d32ae99a592433c4852aa63176d3f54fc5bf28368d4a5250e810c278d83b667f993c91a0ca7dadc364ddfbb098e5e24ffdfa1c5812bb60160054c63601afa2cdb416c4a76b73e81c45f4a723c5b0a72be724c97095f3d232031aca236338cce7270600db7c512abc3ba6b02b9598a20a37f4555e85e1316a011c7bc5e798fdff73b7a837b42be24be13973021831309cd6a4059fe18d50ed538fedd6530ca3090d1e347907d323455cc4bed8913a9950e395f15f6451a0348faaf08c83eff084e0a5eee8c807381dd3a5669ce13c5ff58217d821c0d362c01cdd8e250f1da61c1b3780e8beddab5522d4a4d68e439a7f71c6cd199118f1f9e581073236cfb4c35fc0ee11f994ca406811f4d58bd768a6896a6e448374f18ca309fd891dbc42b0506fdf348c00df3d236678ea3c4427a71d4f27475fa701ab2641fc9fa10e5651262ac24b6080a5c361b0370fa331fa507beacc3b77486076c95ae09b3cc0f26f3e60fec0c09c4c5cc84b2b71f5f3fa2295e16e5523ae708880cf530705f9abfe5633e6d74ed37dd606bb353441f6003f03df7842cf7a20b90b044d69e1fa3ac3a5a7aa3e2429434e3fa4aba4dd3fe129b9aad10643425212e438c84b3f3e6a890965cd75b9b01bb10d986e1554a8cb7b9ed68189500251009091f5a35b0fffb2190ecb28bff55ef8f152714b357c0a37ab6a48021453204d0af20e10d1c556d9fe4a2f894e4e9caec338ec6b18e44e18ebec9ccfe88c72b8b95b7c0d5f58e1e7ed46cc77e3eb2fb7e0f257f379af580c17e0527a42fd3258d9104ff8fa9ca7f23c855c8ea50199d4b1a4aaeda241ecac7ec63a778c3ce13e0c4baa4d9ec226ba2b31d9074d20e145668c1e19bcdea57c39d7a8ed3263b26ab80cf1b13306cdaab7305afa27baa57508fef4ccfa92769ced7e6f102f7c405fdb4e5fc3eed8a7d3cbb95381995021ba7fdff99b613e62b2331688f76aedf03ba9069856ace6826bc512cbe88c3221fc24aaaa779b8869624ea73ed9e5dad239cbd590bb5ee91a08762ad8593273eec5c1cbb593eb85a27d9f342ebd05b5f2a86fb0e023e93d4708b189e99e10ee861e3e541017ee1c35e3601f46a8ae7d20ae8be1bf51fcefe251c10db16fc9b10fe6721020af4e0eeb025d4dde3f817b41ac467def27070425000aa5d002f465b84cf599edff07b71cc63d44165fda1ff0d4ba98c5e5af3690ecf80fa73f55d1d4d7671627a913acd20b2c9446a80274f2eeee016598caa51127945084e7557e56621f2ce45042be9beaa20b719190ffd125c0d2e02966a9fbb5e256b6c8e3014c1cb9f72667245f96ce2a543d7909d392d96af946a5d590a22ff2441013dd11ddb9df8067efdc75321456619a2dd221c0b61111e6b08a74cbdedf8502cc0d0d9a2b15ccade1eff2afb69b6a187a6a83c222dc266b8bcaa4f9a9d1a5b5ad4e87c9df44923cede9b6b1c525a381964d0f000be0169e33d39caa34f0c60198ed03f0f97b266dc3457df315cc1f9552b60cf203ff8e67c024183caed253209cb00e88e7768e004dd5ba0225b6459c6139ecb";

        bytes32[] memory inputs = new bytes32[](4);

        // msg
        inputs[0] = bytes32(0x00000000000000000000000000000000232349c992ac70f35f0b1c8bce9757aa);
        inputs[1] = bytes32(0x00000000000000000000000000000000f94eed6d65dbbeb804885eede3da5404);

        // root
        inputs[2] = bytes32(0x00000000000000000000000000000000cb96da10dffbbe4a27cd312a9db9503e);
        inputs[3] = bytes32(0x00000000000000000000000000000000cb086e2e90312d3d8793e5bf4bec5a77);

        require(rococo.verify(proof, inputs), "Plonk: Invalid Proof");
    }
}
