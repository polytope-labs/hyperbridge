[package]
name = "hyperbridge"
version = "0.3.8"
authors = ["Polytope Labs <hello@polytope.technology>"]
description = "The Hyperbridge coprocessor node"
repository = "https://github.com/polytope-labs/hyperbridge"
edition = "2021"
build = "build.rs"

[dependencies]
# crates.io
clap = { version = "4.0.32", features = ["derive"] }
log = "0.4.17"
codec = { package = "parity-scale-codec", version = "3.0.0" }
serde = { version = "1.0.152", features = ["derive"] }
jsonrpsee = { version = "0.16.2", features = ["server"] }
futures = "0.3.28"
serde_json = "1.0.108"

# local
gargantua-runtime = { path = "../runtimes/gargantua" }
messier-runtime = { path = "../runtimes/messier" }
nexus-runtime = { path = "../runtimes/nexus" }
pallet-ismp-rpc = { workspace = true }
pallet-ismp-runtime-api = { workspace = true }

# Substrate
frame-benchmarking = { workspace = true }
frame-benchmarking-cli = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-consensus = { workspace = true }
sc-executor = { workspace = true }
sc-network = { workspace = true }
sc-network-sync = { workspace = true }
sc-network-common = { workspace = true }
sc-rpc = { workspace = true }
sc-service = { workspace = true }
sc-sysinfo = { workspace = true }
sc-telemetry = { workspace = true }
sc-tracing = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-keystore = { workspace = true }
sp-offchain = { workspace = true }
sc-offchain = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-timestamp = { workspace = true }
sp-transaction-pool = { workspace = true }
substrate-frame-rpc-system = { workspace = true }
substrate-prometheus-endpoint = { workspace = true }
try-runtime-cli = { workspace = true,  optional = true }

# Polkadot
polkadot-cli = { workspace = true }
polkadot-primitives = { workspace = true }
polkadot-service = { workspace = true }
staging-xcm = { workspace = true, default-features = false }

# Cumulus
cumulus-client-cli = { workspace = true }
cumulus-primitives-aura = { workspace = true }
cumulus-client-consensus-aura = { workspace = true }
cumulus-client-consensus-common = { workspace = true }
cumulus-client-network = { workspace = true }
cumulus-client-service = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-relay-chain-interface = { workspace = true }
cumulus-client-consensus-proposer = { workspace = true }
cumulus-client-collator = { workspace = true }

[build-dependencies]
substrate-build-script-utils = { version = "11.0.0" }

[features]
default = []
runtime-benchmarks = [
	"try-runtime-cli/try-runtime",
	"gargantua-runtime/runtime-benchmarks",
	"messier-runtime/runtime-benchmarks",
	"polkadot-cli/runtime-benchmarks",
]
try-runtime = [
	"try-runtime-cli/try-runtime",
	"gargantua-runtime/try-runtime",
	"messier-runtime/try-runtime"
]
async-backing = [
	"gargantua-runtime/async-backing",
	"messier-runtime/async-backing"
]
