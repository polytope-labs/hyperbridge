scalar BigInt
scalar Date

type SupportedChainFilter {
  equalTo: SupportedChain!
}
type BigFloatFilter {
  greaterThanOrEqualTo: BigInt
}

type StringFilter {
  equalTo: String!
}

type StateMachineUpdateEventFilter {
  
  stateMachineId: StringFilter

  height: BigFloatFilter

  chain: SupportedChainFilter

  and: [StateMachineUpdateEventFilter!]
}

type StateMachineUpdateEventConnection {
  nodes: [StateMachineUpdateEvent]
}

type RequestMetadataConnection {
  nodes: [RequestStatusMetadata]
}

type ResponseMetadataConnection {
  nodes: [ResponseStatusMetadata]
}

type MyRequest {
    id: ID!
    chain: SupportedChain!
    source: String
    dest: String
    timeoutTimestamp: BigInt
    from: String 
    to: String 
    nonce: BigInt 
    data: String 
    fee: BigInt 
    status: RequestStatus!
    statusMetadata: RequestMetadataConnection!
}

type MyResponse {
    id: ID!
    chain: SupportedChain!
    response_message: String
    responseTimeoutTimestamp: BigInt
    status: ResponseStatus!
    request: Request
    statusMetadata: ResponseMetadataConnection!
}
type Query {
    request(id: String!): MyRequest
    response(id: String!): MyResponse
    stateMachineUpdateEvents(filter: StateMachineUpdateEventFilter ): StateMachineUpdateEventConnection
}

schema {
  query: Query
}