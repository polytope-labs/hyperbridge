// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class GetRequestEvent extends ethereum.Event {
  get params(): GetRequestEvent__Params {
    return new GetRequestEvent__Params(this);
  }
}

export class GetRequestEvent__Params {
  _event: GetRequestEvent;

  constructor(event: GetRequestEvent) {
    this._event = event;
  }

  get source(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get dest(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get from(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get keys(): Array<Bytes> {
    return this._event.parameters[3].value.toBytesArray();
  }

  get nonce(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get height(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get timeoutTimestamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get gaslimit(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class GetRequestHandled extends ethereum.Event {
  get params(): GetRequestHandled__Params {
    return new GetRequestHandled__Params(this);
  }
}

export class GetRequestHandled__Params {
  _event: GetRequestHandled;

  constructor(event: GetRequestHandled) {
    this._event = event;
  }

  get commitment(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get relayer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PostRequestEvent extends ethereum.Event {
  get params(): PostRequestEvent__Params {
    return new PostRequestEvent__Params(this);
  }
}

export class PostRequestEvent__Params {
  _event: PostRequestEvent;

  constructor(event: PostRequestEvent) {
    this._event = event;
  }

  get source(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get dest(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get from(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get to(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get nonce(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timeoutTimestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get gaslimit(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class PostRequestHandled extends ethereum.Event {
  get params(): PostRequestHandled__Params {
    return new PostRequestHandled__Params(this);
  }
}

export class PostRequestHandled__Params {
  _event: PostRequestHandled;

  constructor(event: PostRequestHandled) {
    this._event = event;
  }

  get commitment(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get relayer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PostResponseEvent extends ethereum.Event {
  get params(): PostResponseEvent__Params {
    return new PostResponseEvent__Params(this);
  }
}

export class PostResponseEvent__Params {
  _event: PostResponseEvent;

  constructor(event: PostResponseEvent) {
    this._event = event;
  }

  get source(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get dest(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get from(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get to(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get nonce(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timeoutTimestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get gaslimit(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get response(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }

  get resGaslimit(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get resTimeoutTimestamp(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class PostResponseHandled extends ethereum.Event {
  get params(): PostResponseHandled__Params {
    return new PostResponseHandled__Params(this);
  }
}

export class PostResponseHandled__Params {
  _event: PostResponseHandled;

  constructor(event: PostResponseHandled) {
    this._event = event;
  }

  get commitment(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get relayer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class EthereumHost__hostParamsResultValue0Struct extends ethereum.Tuple {
  get defaultTimeout(): BigInt {
    return this[0].toBigInt();
  }

  get baseGetRequestFee(): BigInt {
    return this[1].toBigInt();
  }

  get perByteFee(): BigInt {
    return this[2].toBigInt();
  }

  get feeTokenAddress(): Address {
    return this[3].toAddress();
  }

  get admin(): Address {
    return this[4].toAddress();
  }

  get handler(): Address {
    return this[5].toAddress();
  }

  get hostManager(): Address {
    return this[6].toAddress();
  }

  get unStakingPeriod(): BigInt {
    return this[7].toBigInt();
  }

  get challengePeriod(): BigInt {
    return this[8].toBigInt();
  }

  get consensusClient(): Address {
    return this[9].toAddress();
  }

  get consensusState(): Bytes {
    return this[10].toBytes();
  }

  get lastUpdated(): BigInt {
    return this[11].toBigInt();
  }

  get latestStateMachineHeight(): BigInt {
    return this[12].toBigInt();
  }

  get hyperbridge(): Bytes {
    return this[13].toBytes();
  }
}

export class EthereumHost__requestCommitmentsResultValue0Struct extends ethereum.Tuple {
  get fee(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Address {
    return this[1].toAddress();
  }
}

export class EthereumHost__responseCommitmentsResultValue0Struct extends ethereum.Tuple {
  get fee(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Address {
    return this[1].toAddress();
  }
}

export class EthereumHost__responseReceiptsResultValue0Struct extends ethereum.Tuple {
  get responseCommitment(): Bytes {
    return this[0].toBytes();
  }

  get relayer(): Address {
    return this[1].toAddress();
  }
}

export class EthereumHost__stateMachineCommitmentResultValue0Struct extends ethereum.Tuple {
  get timestamp(): BigInt {
    return this[0].toBigInt();
  }

  get overlayRoot(): Bytes {
    return this[1].toBytes();
  }

  get stateRoot(): Bytes {
    return this[2].toBytes();
  }
}

export class EthereumHost__stateMachineCommitmentInputHeightStruct extends ethereum.Tuple {
  get stateMachineId(): BigInt {
    return this[0].toBigInt();
  }

  get height(): BigInt {
    return this[1].toBigInt();
  }
}

export class EthereumHost__stateMachineCommitmentUpdateTimeInputHeightStruct extends ethereum.Tuple {
  get stateMachineId(): BigInt {
    return this[0].toBigInt();
  }

  get height(): BigInt {
    return this[1].toBigInt();
  }
}

export class EthereumHost extends ethereum.SmartContract {
  static bind(address: Address): EthereumHost {
    return new EthereumHost("EthereumHost", address);
  }

  CHAIN_ID(): BigInt {
    let result = super.call("CHAIN_ID", "CHAIN_ID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_CHAIN_ID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("CHAIN_ID", "CHAIN_ID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  baseGetRequestFee(): BigInt {
    let result = super.call(
      "baseGetRequestFee",
      "baseGetRequestFee():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_baseGetRequestFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "baseGetRequestFee",
      "baseGetRequestFee():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  chainId(): BigInt {
    let result = super.call("chainId", "chainId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_chainId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("chainId", "chainId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  challengePeriod(): BigInt {
    let result = super.call(
      "challengePeriod",
      "challengePeriod():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_challengePeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "challengePeriod",
      "challengePeriod():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  consensusClient(): Address {
    let result = super.call(
      "consensusClient",
      "consensusClient():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_consensusClient(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "consensusClient",
      "consensusClient():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  consensusState(): Bytes {
    let result = super.call("consensusState", "consensusState():(bytes)", []);

    return result[0].toBytes();
  }

  try_consensusState(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "consensusState",
      "consensusState():(bytes)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  consensusUpdateTime(): BigInt {
    let result = super.call(
      "consensusUpdateTime",
      "consensusUpdateTime():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_consensusUpdateTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "consensusUpdateTime",
      "consensusUpdateTime():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dai(): Address {
    let result = super.call("dai", "dai():(address)", []);

    return result[0].toAddress();
  }

  try_dai(): ethereum.CallResult<Address> {
    let result = super.tryCall("dai", "dai():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  frozen(): boolean {
    let result = super.call("frozen", "frozen():(bool)", []);

    return result[0].toBoolean();
  }

  try_frozen(): ethereum.CallResult<boolean> {
    let result = super.tryCall("frozen", "frozen():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  host(): Bytes {
    let result = super.call("host", "host():(bytes)", []);

    return result[0].toBytes();
  }

  try_host(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("host", "host():(bytes)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hostParams(): EthereumHost__hostParamsResultValue0Struct {
    let result = super.call(
      "hostParams",
      "hostParams():((uint256,uint256,uint256,address,address,address,address,uint256,uint256,address,bytes,uint256,uint256,bytes))",
      [],
    );

    return changetype<EthereumHost__hostParamsResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_hostParams(): ethereum.CallResult<EthereumHost__hostParamsResultValue0Struct> {
    let result = super.tryCall(
      "hostParams",
      "hostParams():((uint256,uint256,uint256,address,address,address,address,uint256,uint256,address,bytes,uint256,uint256,bytes))",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EthereumHost__hostParamsResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  hyperbridge(): Bytes {
    let result = super.call("hyperbridge", "hyperbridge():(bytes)", []);

    return result[0].toBytes();
  }

  try_hyperbridge(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("hyperbridge", "hyperbridge():(bytes)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  latestStateMachineHeight(): BigInt {
    let result = super.call(
      "latestStateMachineHeight",
      "latestStateMachineHeight():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_latestStateMachineHeight(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "latestStateMachineHeight",
      "latestStateMachineHeight():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  perByteFee(): BigInt {
    let result = super.call("perByteFee", "perByteFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_perByteFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("perByteFee", "perByteFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  requestCommitments(
    commitment: Bytes,
  ): EthereumHost__requestCommitmentsResultValue0Struct {
    let result = super.call(
      "requestCommitments",
      "requestCommitments(bytes32):((uint256,address))",
      [ethereum.Value.fromFixedBytes(commitment)],
    );

    return changetype<EthereumHost__requestCommitmentsResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_requestCommitments(
    commitment: Bytes,
  ): ethereum.CallResult<EthereumHost__requestCommitmentsResultValue0Struct> {
    let result = super.tryCall(
      "requestCommitments",
      "requestCommitments(bytes32):((uint256,address))",
      [ethereum.Value.fromFixedBytes(commitment)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EthereumHost__requestCommitmentsResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  requestReceipts(commitment: Bytes): Address {
    let result = super.call(
      "requestReceipts",
      "requestReceipts(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(commitment)],
    );

    return result[0].toAddress();
  }

  try_requestReceipts(commitment: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "requestReceipts",
      "requestReceipts(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(commitment)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  responseCommitments(
    commitment: Bytes,
  ): EthereumHost__responseCommitmentsResultValue0Struct {
    let result = super.call(
      "responseCommitments",
      "responseCommitments(bytes32):((uint256,address))",
      [ethereum.Value.fromFixedBytes(commitment)],
    );

    return changetype<EthereumHost__responseCommitmentsResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_responseCommitments(
    commitment: Bytes,
  ): ethereum.CallResult<EthereumHost__responseCommitmentsResultValue0Struct> {
    let result = super.tryCall(
      "responseCommitments",
      "responseCommitments(bytes32):((uint256,address))",
      [ethereum.Value.fromFixedBytes(commitment)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EthereumHost__responseCommitmentsResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  responseReceipts(
    commitment: Bytes,
  ): EthereumHost__responseReceiptsResultValue0Struct {
    let result = super.call(
      "responseReceipts",
      "responseReceipts(bytes32):((bytes32,address))",
      [ethereum.Value.fromFixedBytes(commitment)],
    );

    return changetype<EthereumHost__responseReceiptsResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_responseReceipts(
    commitment: Bytes,
  ): ethereum.CallResult<EthereumHost__responseReceiptsResultValue0Struct> {
    let result = super.tryCall(
      "responseReceipts",
      "responseReceipts(bytes32):((bytes32,address))",
      [ethereum.Value.fromFixedBytes(commitment)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EthereumHost__responseReceiptsResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  stateMachineCommitment(
    height: EthereumHost__stateMachineCommitmentInputHeightStruct,
  ): EthereumHost__stateMachineCommitmentResultValue0Struct {
    let result = super.call(
      "stateMachineCommitment",
      "stateMachineCommitment((uint256,uint256)):((uint256,bytes32,bytes32))",
      [ethereum.Value.fromTuple(height)],
    );

    return changetype<EthereumHost__stateMachineCommitmentResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_stateMachineCommitment(
    height: EthereumHost__stateMachineCommitmentInputHeightStruct,
  ): ethereum.CallResult<EthereumHost__stateMachineCommitmentResultValue0Struct> {
    let result = super.tryCall(
      "stateMachineCommitment",
      "stateMachineCommitment((uint256,uint256)):((uint256,bytes32,bytes32))",
      [ethereum.Value.fromTuple(height)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EthereumHost__stateMachineCommitmentResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  stateMachineCommitmentUpdateTime(
    height: EthereumHost__stateMachineCommitmentUpdateTimeInputHeightStruct,
  ): BigInt {
    let result = super.call(
      "stateMachineCommitmentUpdateTime",
      "stateMachineCommitmentUpdateTime((uint256,uint256)):(uint256)",
      [ethereum.Value.fromTuple(height)],
    );

    return result[0].toBigInt();
  }

  try_stateMachineCommitmentUpdateTime(
    height: EthereumHost__stateMachineCommitmentUpdateTimeInputHeightStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "stateMachineCommitmentUpdateTime",
      "stateMachineCommitmentUpdateTime((uint256,uint256)):(uint256)",
      [ethereum.Value.fromTuple(height)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  timestamp(): BigInt {
    let result = super.call("timestamp", "timestamp():(uint256)", []);

    return result[0].toBigInt();
  }

  try_timestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("timestamp", "timestamp():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  unStakingPeriod(): BigInt {
    let result = super.call(
      "unStakingPeriod",
      "unStakingPeriod():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_unStakingPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "unStakingPeriod",
      "unStakingPeriod():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get params(): ConstructorCallParamsStruct {
    return changetype<ConstructorCallParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCallParamsStruct extends ethereum.Tuple {
  get defaultTimeout(): BigInt {
    return this[0].toBigInt();
  }

  get baseGetRequestFee(): BigInt {
    return this[1].toBigInt();
  }

  get perByteFee(): BigInt {
    return this[2].toBigInt();
  }

  get feeTokenAddress(): Address {
    return this[3].toAddress();
  }

  get admin(): Address {
    return this[4].toAddress();
  }

  get handler(): Address {
    return this[5].toAddress();
  }

  get hostManager(): Address {
    return this[6].toAddress();
  }

  get unStakingPeriod(): BigInt {
    return this[7].toBigInt();
  }

  get challengePeriod(): BigInt {
    return this[8].toBigInt();
  }

  get consensusClient(): Address {
    return this[9].toAddress();
  }

  get consensusState(): Bytes {
    return this[10].toBytes();
  }

  get lastUpdated(): BigInt {
    return this[11].toBigInt();
  }

  get latestStateMachineHeight(): BigInt {
    return this[12].toBigInt();
  }

  get hyperbridge(): Bytes {
    return this[13].toBytes();
  }
}

export class DispatchCall extends ethereum.Call {
  get inputs(): DispatchCall__Inputs {
    return new DispatchCall__Inputs(this);
  }

  get outputs(): DispatchCall__Outputs {
    return new DispatchCall__Outputs(this);
  }
}

export class DispatchCall__Inputs {
  _call: DispatchCall;

  constructor(call: DispatchCall) {
    this._call = call;
  }

  get get(): DispatchCallGetStruct {
    return changetype<DispatchCallGetStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class DispatchCall__Outputs {
  _call: DispatchCall;

  constructor(call: DispatchCall) {
    this._call = call;
  }
}

export class DispatchCallGetStruct extends ethereum.Tuple {
  get dest(): Bytes {
    return this[0].toBytes();
  }

  get height(): BigInt {
    return this[1].toBigInt();
  }

  get keys(): Array<Bytes> {
    return this[2].toBytesArray();
  }

  get timeout(): BigInt {
    return this[3].toBigInt();
  }

  get gaslimit(): BigInt {
    return this[4].toBigInt();
  }

  get fee(): BigInt {
    return this[5].toBigInt();
  }

  get payer(): Address {
    return this[6].toAddress();
  }
}

export class Dispatch1Call extends ethereum.Call {
  get inputs(): Dispatch1Call__Inputs {
    return new Dispatch1Call__Inputs(this);
  }

  get outputs(): Dispatch1Call__Outputs {
    return new Dispatch1Call__Outputs(this);
  }
}

export class Dispatch1Call__Inputs {
  _call: Dispatch1Call;

  constructor(call: Dispatch1Call) {
    this._call = call;
  }

  get post(): Dispatch1CallPostStruct {
    return changetype<Dispatch1CallPostStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class Dispatch1Call__Outputs {
  _call: Dispatch1Call;

  constructor(call: Dispatch1Call) {
    this._call = call;
  }
}

export class Dispatch1CallPostStruct extends ethereum.Tuple {
  get request(): Dispatch1CallPostRequestStruct {
    return changetype<Dispatch1CallPostRequestStruct>(this[0].toTuple());
  }

  get response(): Bytes {
    return this[1].toBytes();
  }

  get timeout(): BigInt {
    return this[2].toBigInt();
  }

  get gaslimit(): BigInt {
    return this[3].toBigInt();
  }

  get fee(): BigInt {
    return this[4].toBigInt();
  }

  get payer(): Address {
    return this[5].toAddress();
  }
}

export class Dispatch1CallPostRequestStruct extends ethereum.Tuple {
  get source(): Bytes {
    return this[0].toBytes();
  }

  get dest(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }

  get from(): Bytes {
    return this[3].toBytes();
  }

  get to(): Bytes {
    return this[4].toBytes();
  }

  get timeoutTimestamp(): BigInt {
    return this[5].toBigInt();
  }

  get body(): Bytes {
    return this[6].toBytes();
  }

  get gaslimit(): BigInt {
    return this[7].toBigInt();
  }
}

export class Dispatch2Call extends ethereum.Call {
  get inputs(): Dispatch2Call__Inputs {
    return new Dispatch2Call__Inputs(this);
  }

  get outputs(): Dispatch2Call__Outputs {
    return new Dispatch2Call__Outputs(this);
  }
}

export class Dispatch2Call__Inputs {
  _call: Dispatch2Call;

  constructor(call: Dispatch2Call) {
    this._call = call;
  }

  get post(): Dispatch2CallPostStruct {
    return changetype<Dispatch2CallPostStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class Dispatch2Call__Outputs {
  _call: Dispatch2Call;

  constructor(call: Dispatch2Call) {
    this._call = call;
  }
}

export class Dispatch2CallPostStruct extends ethereum.Tuple {
  get dest(): Bytes {
    return this[0].toBytes();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get body(): Bytes {
    return this[2].toBytes();
  }

  get timeout(): BigInt {
    return this[3].toBigInt();
  }

  get gaslimit(): BigInt {
    return this[4].toBigInt();
  }

  get fee(): BigInt {
    return this[5].toBigInt();
  }

  get payer(): Address {
    return this[6].toAddress();
  }
}

export class DispatchIncomingCall extends ethereum.Call {
  get inputs(): DispatchIncomingCall__Inputs {
    return new DispatchIncomingCall__Inputs(this);
  }

  get outputs(): DispatchIncomingCall__Outputs {
    return new DispatchIncomingCall__Outputs(this);
  }
}

export class DispatchIncomingCall__Inputs {
  _call: DispatchIncomingCall;

  constructor(call: DispatchIncomingCall) {
    this._call = call;
  }

  get request(): DispatchIncomingCallRequestStruct {
    return changetype<DispatchIncomingCallRequestStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get meta(): DispatchIncomingCallMetaStruct {
    return changetype<DispatchIncomingCallMetaStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get commitment(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DispatchIncomingCall__Outputs {
  _call: DispatchIncomingCall;

  constructor(call: DispatchIncomingCall) {
    this._call = call;
  }
}

export class DispatchIncomingCallRequestStruct extends ethereum.Tuple {
  get source(): Bytes {
    return this[0].toBytes();
  }

  get dest(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }

  get from(): Bytes {
    return this[3].toBytes();
  }

  get timeoutTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get keys(): Array<Bytes> {
    return this[5].toBytesArray();
  }

  get height(): BigInt {
    return this[6].toBigInt();
  }

  get gaslimit(): BigInt {
    return this[7].toBigInt();
  }
}

export class DispatchIncomingCallMetaStruct extends ethereum.Tuple {
  get fee(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Address {
    return this[1].toAddress();
  }
}

export class DispatchIncoming1Call extends ethereum.Call {
  get inputs(): DispatchIncoming1Call__Inputs {
    return new DispatchIncoming1Call__Inputs(this);
  }

  get outputs(): DispatchIncoming1Call__Outputs {
    return new DispatchIncoming1Call__Outputs(this);
  }
}

export class DispatchIncoming1Call__Inputs {
  _call: DispatchIncoming1Call;

  constructor(call: DispatchIncoming1Call) {
    this._call = call;
  }

  get request(): DispatchIncoming1CallRequestStruct {
    return changetype<DispatchIncoming1CallRequestStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get meta(): DispatchIncoming1CallMetaStruct {
    return changetype<DispatchIncoming1CallMetaStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get commitment(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DispatchIncoming1Call__Outputs {
  _call: DispatchIncoming1Call;

  constructor(call: DispatchIncoming1Call) {
    this._call = call;
  }
}

export class DispatchIncoming1CallRequestStruct extends ethereum.Tuple {
  get source(): Bytes {
    return this[0].toBytes();
  }

  get dest(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }

  get from(): Bytes {
    return this[3].toBytes();
  }

  get to(): Bytes {
    return this[4].toBytes();
  }

  get timeoutTimestamp(): BigInt {
    return this[5].toBigInt();
  }

  get body(): Bytes {
    return this[6].toBytes();
  }

  get gaslimit(): BigInt {
    return this[7].toBigInt();
  }
}

export class DispatchIncoming1CallMetaStruct extends ethereum.Tuple {
  get fee(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Address {
    return this[1].toAddress();
  }
}

export class DispatchIncoming2Call extends ethereum.Call {
  get inputs(): DispatchIncoming2Call__Inputs {
    return new DispatchIncoming2Call__Inputs(this);
  }

  get outputs(): DispatchIncoming2Call__Outputs {
    return new DispatchIncoming2Call__Outputs(this);
  }
}

export class DispatchIncoming2Call__Inputs {
  _call: DispatchIncoming2Call;

  constructor(call: DispatchIncoming2Call) {
    this._call = call;
  }

  get request(): DispatchIncoming2CallRequestStruct {
    return changetype<DispatchIncoming2CallRequestStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class DispatchIncoming2Call__Outputs {
  _call: DispatchIncoming2Call;

  constructor(call: DispatchIncoming2Call) {
    this._call = call;
  }
}

export class DispatchIncoming2CallRequestStruct extends ethereum.Tuple {
  get source(): Bytes {
    return this[0].toBytes();
  }

  get dest(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }

  get from(): Bytes {
    return this[3].toBytes();
  }

  get to(): Bytes {
    return this[4].toBytes();
  }

  get timeoutTimestamp(): BigInt {
    return this[5].toBigInt();
  }

  get body(): Bytes {
    return this[6].toBytes();
  }

  get gaslimit(): BigInt {
    return this[7].toBigInt();
  }
}

export class DispatchIncoming3Call extends ethereum.Call {
  get inputs(): DispatchIncoming3Call__Inputs {
    return new DispatchIncoming3Call__Inputs(this);
  }

  get outputs(): DispatchIncoming3Call__Outputs {
    return new DispatchIncoming3Call__Outputs(this);
  }
}

export class DispatchIncoming3Call__Inputs {
  _call: DispatchIncoming3Call;

  constructor(call: DispatchIncoming3Call) {
    this._call = call;
  }

  get response(): DispatchIncoming3CallResponseStruct {
    return changetype<DispatchIncoming3CallResponseStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get meta(): DispatchIncoming3CallMetaStruct {
    return changetype<DispatchIncoming3CallMetaStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class DispatchIncoming3Call__Outputs {
  _call: DispatchIncoming3Call;

  constructor(call: DispatchIncoming3Call) {
    this._call = call;
  }
}

export class DispatchIncoming3CallResponseStruct extends ethereum.Tuple {
  get request(): DispatchIncoming3CallResponseRequestStruct {
    return changetype<DispatchIncoming3CallResponseRequestStruct>(
      this[0].toTuple(),
    );
  }

  get values(): Array<DispatchIncoming3CallResponseValuesStruct> {
    return this[1].toTupleArray<DispatchIncoming3CallResponseValuesStruct>();
  }
}

export class DispatchIncoming3CallResponseRequestStruct extends ethereum.Tuple {
  get source(): Bytes {
    return this[0].toBytes();
  }

  get dest(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }

  get from(): Bytes {
    return this[3].toBytes();
  }

  get timeoutTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get keys(): Array<Bytes> {
    return this[5].toBytesArray();
  }

  get height(): BigInt {
    return this[6].toBigInt();
  }

  get gaslimit(): BigInt {
    return this[7].toBigInt();
  }
}

export class DispatchIncoming3CallResponseValuesStruct extends ethereum.Tuple {
  get key(): Bytes {
    return this[0].toBytes();
  }

  get value(): Bytes {
    return this[1].toBytes();
  }
}

export class DispatchIncoming3CallMetaStruct extends ethereum.Tuple {
  get fee(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Address {
    return this[1].toAddress();
  }
}

export class DispatchIncoming4Call extends ethereum.Call {
  get inputs(): DispatchIncoming4Call__Inputs {
    return new DispatchIncoming4Call__Inputs(this);
  }

  get outputs(): DispatchIncoming4Call__Outputs {
    return new DispatchIncoming4Call__Outputs(this);
  }
}

export class DispatchIncoming4Call__Inputs {
  _call: DispatchIncoming4Call;

  constructor(call: DispatchIncoming4Call) {
    this._call = call;
  }

  get response(): DispatchIncoming4CallResponseStruct {
    return changetype<DispatchIncoming4CallResponseStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class DispatchIncoming4Call__Outputs {
  _call: DispatchIncoming4Call;

  constructor(call: DispatchIncoming4Call) {
    this._call = call;
  }
}

export class DispatchIncoming4CallResponseStruct extends ethereum.Tuple {
  get request(): DispatchIncoming4CallResponseRequestStruct {
    return changetype<DispatchIncoming4CallResponseRequestStruct>(
      this[0].toTuple(),
    );
  }

  get response(): Bytes {
    return this[1].toBytes();
  }

  get timeoutTimestamp(): BigInt {
    return this[2].toBigInt();
  }

  get gaslimit(): BigInt {
    return this[3].toBigInt();
  }
}

export class DispatchIncoming4CallResponseRequestStruct extends ethereum.Tuple {
  get source(): Bytes {
    return this[0].toBytes();
  }

  get dest(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }

  get from(): Bytes {
    return this[3].toBytes();
  }

  get to(): Bytes {
    return this[4].toBytes();
  }

  get timeoutTimestamp(): BigInt {
    return this[5].toBigInt();
  }

  get body(): Bytes {
    return this[6].toBytes();
  }

  get gaslimit(): BigInt {
    return this[7].toBigInt();
  }
}

export class DispatchIncoming5Call extends ethereum.Call {
  get inputs(): DispatchIncoming5Call__Inputs {
    return new DispatchIncoming5Call__Inputs(this);
  }

  get outputs(): DispatchIncoming5Call__Outputs {
    return new DispatchIncoming5Call__Outputs(this);
  }
}

export class DispatchIncoming5Call__Inputs {
  _call: DispatchIncoming5Call;

  constructor(call: DispatchIncoming5Call) {
    this._call = call;
  }

  get response(): DispatchIncoming5CallResponseStruct {
    return changetype<DispatchIncoming5CallResponseStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get meta(): DispatchIncoming5CallMetaStruct {
    return changetype<DispatchIncoming5CallMetaStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get commitment(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DispatchIncoming5Call__Outputs {
  _call: DispatchIncoming5Call;

  constructor(call: DispatchIncoming5Call) {
    this._call = call;
  }
}

export class DispatchIncoming5CallResponseStruct extends ethereum.Tuple {
  get request(): DispatchIncoming5CallResponseRequestStruct {
    return changetype<DispatchIncoming5CallResponseRequestStruct>(
      this[0].toTuple(),
    );
  }

  get response(): Bytes {
    return this[1].toBytes();
  }

  get timeoutTimestamp(): BigInt {
    return this[2].toBigInt();
  }

  get gaslimit(): BigInt {
    return this[3].toBigInt();
  }
}

export class DispatchIncoming5CallResponseRequestStruct extends ethereum.Tuple {
  get source(): Bytes {
    return this[0].toBytes();
  }

  get dest(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }

  get from(): Bytes {
    return this[3].toBytes();
  }

  get to(): Bytes {
    return this[4].toBytes();
  }

  get timeoutTimestamp(): BigInt {
    return this[5].toBigInt();
  }

  get body(): Bytes {
    return this[6].toBytes();
  }

  get gaslimit(): BigInt {
    return this[7].toBigInt();
  }
}

export class DispatchIncoming5CallMetaStruct extends ethereum.Tuple {
  get fee(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Address {
    return this[1].toAddress();
  }
}

export class SetConsensusStateCall extends ethereum.Call {
  get inputs(): SetConsensusStateCall__Inputs {
    return new SetConsensusStateCall__Inputs(this);
  }

  get outputs(): SetConsensusStateCall__Outputs {
    return new SetConsensusStateCall__Outputs(this);
  }
}

export class SetConsensusStateCall__Inputs {
  _call: SetConsensusStateCall;

  constructor(call: SetConsensusStateCall) {
    this._call = call;
  }

  get state(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetConsensusStateCall__Outputs {
  _call: SetConsensusStateCall;

  constructor(call: SetConsensusStateCall) {
    this._call = call;
  }
}

export class SetFrozenStateCall extends ethereum.Call {
  get inputs(): SetFrozenStateCall__Inputs {
    return new SetFrozenStateCall__Inputs(this);
  }

  get outputs(): SetFrozenStateCall__Outputs {
    return new SetFrozenStateCall__Outputs(this);
  }
}

export class SetFrozenStateCall__Inputs {
  _call: SetFrozenStateCall;

  constructor(call: SetFrozenStateCall) {
    this._call = call;
  }

  get newState(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetFrozenStateCall__Outputs {
  _call: SetFrozenStateCall;

  constructor(call: SetFrozenStateCall) {
    this._call = call;
  }
}

export class SetHostParamsCall extends ethereum.Call {
  get inputs(): SetHostParamsCall__Inputs {
    return new SetHostParamsCall__Inputs(this);
  }

  get outputs(): SetHostParamsCall__Outputs {
    return new SetHostParamsCall__Outputs(this);
  }
}

export class SetHostParamsCall__Inputs {
  _call: SetHostParamsCall;

  constructor(call: SetHostParamsCall) {
    this._call = call;
  }

  get params(): SetHostParamsCallParamsStruct {
    return changetype<SetHostParamsCallParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class SetHostParamsCall__Outputs {
  _call: SetHostParamsCall;

  constructor(call: SetHostParamsCall) {
    this._call = call;
  }
}

export class SetHostParamsCallParamsStruct extends ethereum.Tuple {
  get defaultTimeout(): BigInt {
    return this[0].toBigInt();
  }

  get baseGetRequestFee(): BigInt {
    return this[1].toBigInt();
  }

  get perByteFee(): BigInt {
    return this[2].toBigInt();
  }

  get feeTokenAddress(): Address {
    return this[3].toAddress();
  }

  get admin(): Address {
    return this[4].toAddress();
  }

  get handler(): Address {
    return this[5].toAddress();
  }

  get hostManager(): Address {
    return this[6].toAddress();
  }

  get unStakingPeriod(): BigInt {
    return this[7].toBigInt();
  }

  get challengePeriod(): BigInt {
    return this[8].toBigInt();
  }

  get consensusClient(): Address {
    return this[9].toAddress();
  }

  get consensusState(): Bytes {
    return this[10].toBytes();
  }

  get lastUpdated(): BigInt {
    return this[11].toBigInt();
  }

  get latestStateMachineHeight(): BigInt {
    return this[12].toBigInt();
  }

  get hyperbridge(): Bytes {
    return this[13].toBytes();
  }
}

export class SetHostParamsAdminCall extends ethereum.Call {
  get inputs(): SetHostParamsAdminCall__Inputs {
    return new SetHostParamsAdminCall__Inputs(this);
  }

  get outputs(): SetHostParamsAdminCall__Outputs {
    return new SetHostParamsAdminCall__Outputs(this);
  }
}

export class SetHostParamsAdminCall__Inputs {
  _call: SetHostParamsAdminCall;

  constructor(call: SetHostParamsAdminCall) {
    this._call = call;
  }

  get params(): SetHostParamsAdminCallParamsStruct {
    return changetype<SetHostParamsAdminCallParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class SetHostParamsAdminCall__Outputs {
  _call: SetHostParamsAdminCall;

  constructor(call: SetHostParamsAdminCall) {
    this._call = call;
  }
}

export class SetHostParamsAdminCallParamsStruct extends ethereum.Tuple {
  get defaultTimeout(): BigInt {
    return this[0].toBigInt();
  }

  get baseGetRequestFee(): BigInt {
    return this[1].toBigInt();
  }

  get perByteFee(): BigInt {
    return this[2].toBigInt();
  }

  get feeTokenAddress(): Address {
    return this[3].toAddress();
  }

  get admin(): Address {
    return this[4].toAddress();
  }

  get handler(): Address {
    return this[5].toAddress();
  }

  get hostManager(): Address {
    return this[6].toAddress();
  }

  get unStakingPeriod(): BigInt {
    return this[7].toBigInt();
  }

  get challengePeriod(): BigInt {
    return this[8].toBigInt();
  }

  get consensusClient(): Address {
    return this[9].toAddress();
  }

  get consensusState(): Bytes {
    return this[10].toBytes();
  }

  get lastUpdated(): BigInt {
    return this[11].toBigInt();
  }

  get latestStateMachineHeight(): BigInt {
    return this[12].toBigInt();
  }

  get hyperbridge(): Bytes {
    return this[13].toBytes();
  }
}

export class StoreConsensusStateCall extends ethereum.Call {
  get inputs(): StoreConsensusStateCall__Inputs {
    return new StoreConsensusStateCall__Inputs(this);
  }

  get outputs(): StoreConsensusStateCall__Outputs {
    return new StoreConsensusStateCall__Outputs(this);
  }
}

export class StoreConsensusStateCall__Inputs {
  _call: StoreConsensusStateCall;

  constructor(call: StoreConsensusStateCall) {
    this._call = call;
  }

  get state(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class StoreConsensusStateCall__Outputs {
  _call: StoreConsensusStateCall;

  constructor(call: StoreConsensusStateCall) {
    this._call = call;
  }
}

export class StoreConsensusUpdateTimeCall extends ethereum.Call {
  get inputs(): StoreConsensusUpdateTimeCall__Inputs {
    return new StoreConsensusUpdateTimeCall__Inputs(this);
  }

  get outputs(): StoreConsensusUpdateTimeCall__Outputs {
    return new StoreConsensusUpdateTimeCall__Outputs(this);
  }
}

export class StoreConsensusUpdateTimeCall__Inputs {
  _call: StoreConsensusUpdateTimeCall;

  constructor(call: StoreConsensusUpdateTimeCall) {
    this._call = call;
  }

  get time(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StoreConsensusUpdateTimeCall__Outputs {
  _call: StoreConsensusUpdateTimeCall;

  constructor(call: StoreConsensusUpdateTimeCall) {
    this._call = call;
  }
}

export class StoreLatestStateMachineHeightCall extends ethereum.Call {
  get inputs(): StoreLatestStateMachineHeightCall__Inputs {
    return new StoreLatestStateMachineHeightCall__Inputs(this);
  }

  get outputs(): StoreLatestStateMachineHeightCall__Outputs {
    return new StoreLatestStateMachineHeightCall__Outputs(this);
  }
}

export class StoreLatestStateMachineHeightCall__Inputs {
  _call: StoreLatestStateMachineHeightCall;

  constructor(call: StoreLatestStateMachineHeightCall) {
    this._call = call;
  }

  get height(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StoreLatestStateMachineHeightCall__Outputs {
  _call: StoreLatestStateMachineHeightCall;

  constructor(call: StoreLatestStateMachineHeightCall) {
    this._call = call;
  }
}

export class StoreStateMachineCommitmentCall extends ethereum.Call {
  get inputs(): StoreStateMachineCommitmentCall__Inputs {
    return new StoreStateMachineCommitmentCall__Inputs(this);
  }

  get outputs(): StoreStateMachineCommitmentCall__Outputs {
    return new StoreStateMachineCommitmentCall__Outputs(this);
  }
}

export class StoreStateMachineCommitmentCall__Inputs {
  _call: StoreStateMachineCommitmentCall;

  constructor(call: StoreStateMachineCommitmentCall) {
    this._call = call;
  }

  get height(): StoreStateMachineCommitmentCallHeightStruct {
    return changetype<StoreStateMachineCommitmentCallHeightStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get commitment(): StoreStateMachineCommitmentCallCommitmentStruct {
    return changetype<StoreStateMachineCommitmentCallCommitmentStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class StoreStateMachineCommitmentCall__Outputs {
  _call: StoreStateMachineCommitmentCall;

  constructor(call: StoreStateMachineCommitmentCall) {
    this._call = call;
  }
}

export class StoreStateMachineCommitmentCallHeightStruct extends ethereum.Tuple {
  get stateMachineId(): BigInt {
    return this[0].toBigInt();
  }

  get height(): BigInt {
    return this[1].toBigInt();
  }
}

export class StoreStateMachineCommitmentCallCommitmentStruct extends ethereum.Tuple {
  get timestamp(): BigInt {
    return this[0].toBigInt();
  }

  get overlayRoot(): Bytes {
    return this[1].toBytes();
  }

  get stateRoot(): Bytes {
    return this[2].toBytes();
  }
}

export class StoreStateMachineCommitmentUpdateTimeCall extends ethereum.Call {
  get inputs(): StoreStateMachineCommitmentUpdateTimeCall__Inputs {
    return new StoreStateMachineCommitmentUpdateTimeCall__Inputs(this);
  }

  get outputs(): StoreStateMachineCommitmentUpdateTimeCall__Outputs {
    return new StoreStateMachineCommitmentUpdateTimeCall__Outputs(this);
  }
}

export class StoreStateMachineCommitmentUpdateTimeCall__Inputs {
  _call: StoreStateMachineCommitmentUpdateTimeCall;

  constructor(call: StoreStateMachineCommitmentUpdateTimeCall) {
    this._call = call;
  }

  get height(): StoreStateMachineCommitmentUpdateTimeCallHeightStruct {
    return changetype<StoreStateMachineCommitmentUpdateTimeCallHeightStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get time(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class StoreStateMachineCommitmentUpdateTimeCall__Outputs {
  _call: StoreStateMachineCommitmentUpdateTimeCall;

  constructor(call: StoreStateMachineCommitmentUpdateTimeCall) {
    this._call = call;
  }
}

export class StoreStateMachineCommitmentUpdateTimeCallHeightStruct extends ethereum.Tuple {
  get stateMachineId(): BigInt {
    return this[0].toBigInt();
  }

  get height(): BigInt {
    return this[1].toBigInt();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get params(): WithdrawCallParamsStruct {
    return changetype<WithdrawCallParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCallParamsStruct extends ethereum.Tuple {
  get beneficiary(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}
