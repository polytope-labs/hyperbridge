// Copyright (C) Polytope Labs Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
pragma solidity 0.8.17;

import "forge-std/Test.sol";
import {KusamaVerifier} from "../src/consensus/verifiers/KusamaVerifier.sol";
import {PolkadotVerifier} from "../src/consensus/verifiers/PolkadotVerifier.sol";
import {ZkBeefyV1} from "../src/consensus/ZkBeefy.sol";

contract PlonkTest is Test {
    KusamaVerifier internal kusama;
    PolkadotVerifier internal polkadot;

    function setUp() public virtual {
        kusama = new KusamaVerifier();
        polkadot = new PolkadotVerifier();
    }

    function testKusamaVerifier() public view {
        bytes memory proof =
            hex"1df9452144aa7b7d66c55bae5bd5eab85ee066acabbd4d2c8b0827188407aa0527d806c08671968e4462a856e6aa668ae3d945419c49dc113534c47e4284fd8e206b54ac92c850ad33d3000417827da20b53c7d74d506ad3ece5cf752a69cc4b029511fdf73fdcc45e13821abb8d74da38a5e55ce52eeb781958109cb5042b50212d66680e7f0da498967c3e0d87ae6ec3b9efa1993c05ed3986b98a5b93ad6f07a59886044c1a82b7a220e0f99f965a10afabe60e3464416e580ba3d2ec18e61bdf48f16665ca9db54254554abe9b896943d630f46adf2fa9ffebaa023708e827584edcdb771402e92b18c6590363dca7fd1763aedf0c694b66cc700742cb1e1389fb2fe05cf0b670ce5712cb644d8e3098d2cd3ee5d6e014efd08c63b0db120c24a785a773b50ea9bd21511863df16efb2201e5e3db55c5493bc3746767e822a61d67f17c4b758bdeeb3bde4b384dfb890b5ab8e019de21c51f3f2816f18501ea53254fe46428d493a83f78eb350f7c838eaff870e79567dfa7ccd7f47d4602f0d9770c520576030b69a7d64d6f4fe2a47b34f5eadf349b201e21fe5718dd20287e4185990dc46b7378124a4336c1cc3eb80eef7bada17f72d744e44d838410c94fc09a3f69d7ccd3404ef352c15fb4e9e9975de20677f6fb9df9dcfc939bc1e816c7cc1c62f804c73cbe42f6bc2551dd4aa31a44d895a4aa33bdc199fe2f7057c2a9884f8490e04582f39529d618ac7e6bcbdebd8173c0ae286fdeadbbbb81dfe6ad80e3fb25848790697a46eec429732c10c54e1ab00fcffdb6768e69c6825440e19e51d791737a8bfaeb81738eece3e7d316859d9b4020792e0a77a206011263430e1f286bd25edd470b17a846fe55ad538624ed8dd5e1e7eb64157722e1cd75a7c8f2a5792293ed7dca487abc69ffd3b1e2c54fab76827a342be69491f063d704aa84ec3f869c54e85a95bd4e3b1a5c750256a32bc944383c8278ae7cc11401a7ad8dc603e6f032dd3296f5680cfe893cd55d1ea38928d781dd5dbac9c2d1577d9516c08ade4a876b5548e7db28546ab0c572ab43040ba6ee37e950d57148a872d8048e403a62ab3f490958ab34bfdef04486e17d8aa36e533218ebde303834d81ec1a8a148d7a28d5326c2d55a79752068d91914b72bf6a8c79d755b70a4686c06f4f5c9b221035070815f3184964374bffb0db1e42d15c0d4b9e397003ae19a010f9407166adb046208620a7c4ab3170356331f024f7fec9b1aa742d29a492f6697489b5b103fb047543bcab1f9d07f3176f1a08d6c075239117e4740801859151972d764e76d8857439b79e8198a5a177eaab243c5cefa402ca6ff51dafa15898b80a69b46bfdca8d9be5cd7c62637c3b9e0f1ae27976eb0e1475d31e2417d56c50b78815c56b1e6f8f47c601722e167cfbc13a7064128d624ad9891cd6fae2f4a958e8b882e0597ed11290229cfc38bd36d44de76d9edada6331a90e2b192492448b014b5842e33cf4a67c76defeffe57cfacb27a443979ace513405a5fd41d1683c98fef0a8274f10c9990e79e5ffe19316e3341c2b1310dfa3b121de8b32cc89a65dd968bfdf94c85783d55756934d92b55ac1413bc0e5d7f94220a98ff92da395460b868274bf87910e507f7ebc02fc615379ae4c6c4e0455ac08d596e12a44d5e86b99c8419f77944c406befbd7296d882f4a93af35b7030262a6556d55bef040ca123279e7fd0963d636f48a0d47fe814db3b84f919b261a41b1d61bcd284f62994a70ef950cdf74a73abb70e76b59d9aec569a09e4b46bb20a5e34d45f105277d0260e21884f98af40d9da0d1d9a3220719e60095fc83e83113e9fd549a576807cb93ea04bf9072f077c7d88b076d4dc9f0f5aaed54a5b930a63ea9d771ec2fb2aea2f95ffba37df5ba9b4be9b983d182306d4474e9c64aa0d03d2da8486832ee59c26272e3e4517964dcb334ec8309d5dce6f672cd7cb4d1dfe23a0b1662f2a2126d655abcb11005d547cd84db87f1874035b2be896fcb10dac200685494586b40f77bfbc3f6fa1aa1e6d74f2bc3f0c1ad87588a69cfcd52c68bc3058744f79a791f3ddfd7d231cf2a8292e4787a4b1cd8138140b8190a51d27f0e604923d5779cd79a0e48a0eac76b303b51523f8f38f945867f3a4ec4e1ef197deed9172f0395761e3dbbe49462e7dbe56f6964ed0c6f7cd26d920138e2dae5eb7c3cde467402c23937609b609ae7d58b5a406177109a32777ae384fd62975ed677313915843557a0129f6c075201ce4921930d770ab8c57d3e87d48b42614eed9de5c1251793784bf9eb5b547a9a08435ef9fcaf109799ff84100721600ed6cac1e8cc74b6dc3f00f813b67fefb8ecc42d11ce6b5a149a44548e2cde01e13cbd2c684c2a1638ae5a6713bf1dfa52d31cc0d944d7768662e296dcad62e2314a38e3f8b728b8ca067751ebe7b8b64610e0d1aca2f5493f0e9b9b5e2f99c1971f27891e9a734bc8606d28f31a9878a0973c50d65fcaa7df1de53568538232caee0b84a22415e6e8bd6bd40d4980de89120e4f4c319af9eab1c75d84d59d1080b8dc7bc1109b8bb124b6ca7c92d3049d3572dbc47b860bf6838d0e0e9eb2417d4bdd49bd6cf79c49d8f0faaef90151f6065e5a4249a4961446a029fd3aca30b825ad17f2cac2b9d90fedb532853070f8e227e2c29df09f961b1d323aada9410e71d245af0c24e47ef2f8056ab50e1b28b65eee25314f8d126882811ec49b4247f8a94d6a02d6ac6c8dc189057c6a7ca0d11c627e7d380ececbfc6b8f5895b0e9e851f9c6c9fc00a8516fdeefc6317ead90b78f40404c45335f07701c9f089246433b0f08f60c08a949432b443fb55d88879c54aa8385a0fa6a7042fa380a51c26bec4cc68f26d190ca24efe73dc0b3204fffa3eeca2c14fbab4230dfc80ad021b9e8c113eb417ba22469ba46f1bd328ebba08144b4d6c79b0f5995787cfaa052c22344c552863bdc45d639393088ff16af3a12945374a9b5b82bd0e5caefb";

        bytes32[] memory inputs = new bytes32[](4);

        // msg
        inputs[0] = bytes32(0x000000000000000000000000000000003d2fc8e85afd38a3b23610fae5cbcbf4);
        inputs[1] = bytes32(0x0000000000000000000000000000000024ab7ba5c4b5df37241e921e4b2fb164);

        // root
        inputs[2] = bytes32(0x00000000000000000000000000000000ad19f07c487a8497b6e4f1e9296c3634);
        inputs[3] = bytes32(0x0000000000000000000000000000000048a3f47bf8d72c875d822fc36d306d4f);

        require(kusama.verify(proof, inputs), "Plonk: Invalid Proof");
    }

    function testPolkadotVerifier() public view {
        bytes memory proof =
            hex"2c848584d5b6e71d989f37e4862afea8b4a9cbf04a26bc78c80b6ea13e3e81c81ad85e4842b5867cb16e039414994e72670be8d8656a7ce2d5ba5c59db0e73e029ec44f613d4be00995a4b6dabd070264b3fe206545e11b66b288fa535a57fa20038c49ae6c4af4b23ec8f132ffb2ed84a7bce070755365732db1e5c8763b3bc02a2040be6cf1d91ab49d386ea89ec292b829c560652ade169e30913efa1f61317071c04c9978b12c8c8d224186d38391603cfd281720d07bd1e3e7cf58a8f7f0cfe7970fe780fb3a57560f75fe483bfc4d40387fb3e336b1b374242a54cdf270150b83438cfa1db72db4e386af420e3579bfca297457bbb2327d557e6754aa61741538181ca992d1cea9071d9102491d3a0f6bf475c84e9a2b639701a3028440775b99048f8e4c9eb556d0d4335a3b8bc8bad6e1a52f7d3d610c45a70bc7806015f299c2c0bc20b39641107004ec29aacb5f3c9eaadbfcf48458583bded152914208176f9086145415965819092bbb9b545fc78a0d53e8210b53dd2e736f9ec167e5aba1ee61787904c622df19f29388760ab4cc686bb3aaee6541ef054122e12bf79a51a7a838457cb5a88aca472cf33de973ae83eff8dafe48e1c50c687e3286962a77f90a5bb3acd375a47e623a352bcf2c04b6e168111b1c6bc49eecbed2024c400625827eca185c2aa3acb554fc1004f340416a4bd481dc9fd5e8a697e0f49cef0f751aa9ed0501608dd1828cb2e02f478096c23f9dab9f2d5560061861cb894b6d6271e8add0bdc11c89a2290ac02f9ff1e7bca341cf4fda9ed3f673d1d0960e9e01cb76541c78208a84b30b714ff15b397e163f926ad8853d780a7381a1acc434e6a0f77ae752f6f1540157f0071b136c7e51562a165fe15a8bd90e60aa5c3aaea8f57343f102a549dc7d11fe8ce220aa3f5d46fcba47bb8a161b01e0763812132ddda856100fa1379a9117fa9759698a3d9d9520da4d34edbb3bf7609a15eb6ca0e8b98901bd02d8537fa293cde682ecc4d0416aa60ea8962c7a11c0724fa239dd754c4af417866210b3d40cf23c5d251400f7ceae3a69acabbae861a4500599f863e469bccba0a4148a47680993780814a06fddbe306ad3bf3113f08fa8ff329aeb3e287474d063e761708dbe9f76babe4c54f940caa750265466c2e379d3d230fa0d15b96971338f2e9876563e4e7f5a45366324f1072b629d6d7092da231acdf0ec9c31346214391532e9656f62ddc6fa9d7d4a5f744e3be26581fb6e9c89b0e609b1d5b094b2a7ea04e9449c6c2340aba3d4d33f14428821a701d101d90edd9993a6dcf6d05b1a08769dcda60f6ff292a8d91aabd06ee39290320b247017f56441b32704d8606b8ccce91d81ae070ade82fc05210b30e15138c239c9c5c89592c0d7818f30254be82be6fdc83ae3ca9022d667ba83f89b0984c295dd0c79278f53c6bef75ef736bd4b8ac17d5585a0cf4c40d8c462cb5b91a952defccc598a270e3fcced2bc61e034f77a1e76b31266034d404f81f4b0bfe7e622a4372573b6429430e9635353cab93f42d68d8b562200e94d76519d20742a4e24edeed1a4cc48befa43406d0b58a93e3c8da635bf4709d4d11ba91ea51c81291a15837975c73eb5d76847a750f498a49e71c55e27e44a262cd24e0110126ffa2beffad165c0100561321399dd3c3d3b94b3588743e50c40bb91d2ed30b46a9b19c701982a5614eb7506dbd98df3f693e8926427ef42fd5c702429a4b29de40e2f5e04ebaf1ae4fc6c798f25d4e5c18fa85cd5467a736990f56fca9e06e208bf2be88a56c05cf6aab2f14fbe9992d41dedeaa4ceb354de49cb0f1a14ddc62cdb165bfa7a9b72cc5e9c67c325fa229c82837f50820bcecfce8cf47c2e47fc6c970a7f3d406f24805878b538cc08ccf91869cc73d03bebc7ece81e1d57a66ddb681cf3d8b5ecfd020d2f5d5473e8c61c228d3466f7bf5acb115edd2523efb1f47e1684df2baef61b727a5de35071f577328f259e9a9a1ca4d0e70cc247dd7897fc1455f1fc974825e0ffe25310464dd8eed88bcad5f1b0b4d10ee8bcf5d86e1f890290f1f23d6beb54e2a50accec368ad30b55086f27a35808eef4ffe110889dbd2271a1916025e9a6cb92cdebdda891ab7a717836a114b534b94fe9196a8021ec10589b082ef2dd11d3de950cfe5ea2770a3be9b28c3d786326a4bcedc7e975171ccb9c1047122d543c62433f33b54e7446268cbda29ab42a486db43dbb83eb262235a065d21f3f83d9ce9c2d79e0fe110d5165a88d819873a42f68396d02f8e30c5cf0006d71990329c86564ccc705e0415aa6e52f5955b841dfd5ca2a6b6fac07a613c9911fb3ddbbaf0f92eba9c6740dcff864a6763b35fb62619a2eed25c41aa38803a758c196d225ca1dc78ab47c80e0f7c1ffd97148c22e353d356d533d251fa41f7b0f11b049e154004017316981e3145f3237a91e4d332cec8b620c5e0ea44f59b1a882cd25135e2387d61bd2e42032c5f86a9d87b223dd8d70c2c41323d6108db56c3e4cdeb381b2a673b3fbcd75f37aeed634f525af46f5adb074982ae475d40a18f0d9b42c1cda23879e35c2985417f9e42ac12aeb0a393f5fdf98048d0807bd855b9fb1d93d2377945aad9cd56e53ff3ff3f17c15d140ff8c3d6612ebbedffc4f0fca7ab1c178731d22558c467340ed2cf65abfa1fa70380d24b706f8f8e2b6cde713b87a05fa18112feac54d2671d3ca5466b7d882ac7271a6a62981b9a3c7a31ab1e0afbad7ba862a59d40864277ce9dc6445baee16ab96b9051ac1750f08bfa7454b23a9cca5d7074abe1b6b25c785be68e69e49e3a232981529d4999c11e78d73d9cd187052dc06d3c31146d033dec7d14feded879f9e56b91cd9730d693a9477c41022672c72092d85d8d0d2d9b03d1dd702d009d39c7f4426a775144a673962938b7c3fdc6364da478bf641d6664517a5684c7219b982ca0552d179585f2e8ef8f6f4d8a5eb0a169171a680d067517561497d61eca801d6";

        bytes32[] memory inputs = new bytes32[](4);

        // msg
        inputs[0] = bytes32(0x000000000000000000000000000000002c70a513176c417bbecef38a38f126fd);
        inputs[1] = bytes32(0x00000000000000000000000000000000f9da2e1950113dca3dd71d15fb0e975c);

        // root
        inputs[2] = bytes32(0x00000000000000000000000000000000bb6651456c2de48a1c89bbeaeedff69e);
        inputs[3] = bytes32(0x00000000000000000000000000000000361f1374052ca6e8ad582c518968415a);

        require(polkadot.verify(proof, inputs), "Plonk: Invalid Proof");
    }
}
