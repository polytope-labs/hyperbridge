[package]
name = "nexus-runtime"
version = "0.1.1"
authors = ["Polytope Labs <hello@polytope.technology>"]
description = "Parachain runtime implementation of the hyperbridge protocol (Polkadot)"
edition = "2021"
publish = false


[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[dependencies]
# crates.io
codec = { workspace = true, features = ["derive"] }
hex-literal = {  workspace = true, optional = true }
log = {  workspace = true }
scale-info = { version = "2.3.1", default-features = false, features = ["derive"] }
smallvec = "1.10.0"
orml-xcm-support = { workspace = true  }
orml-traits = { workspace = true  }
anyhow = { workspace = true, default-features = false }

# Substrate
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-metadata-hash-extension = { workspace = true }

frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
pallet-aura = { workspace = true }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
pallet-assets = { workspace = true }
pallet-session = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-message-queue = { workspace = true }
pallet-utility = { workspace = true }
pallet-treasury = { workspace = true}
pallet-asset-rate = { workspace = true}
pallet-collective = { workspace = true}
pallet-multisig = { workspace = true}
pallet-proxy = { workspace = true}

sp-api = { workspace = true }
sp-io = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }
sp-storage = { workspace = true }
sp-genesis-builder = { workspace = true }

# Polkadot
pallet-xcm = { workspace = true }
polkadot-parachain-primitives = { workspace = true }
polkadot-runtime-common = { workspace = true }
staging-xcm = { workspace = true }
staging-xcm-builder = { workspace = true }
staging-xcm-executor = { workspace = true }

# Cumulus
cumulus-pallet-aura-ext = { workspace = true }
cumulus-pallet-dmp-queue = { workspace = true }
cumulus-pallet-parachain-system = { workspace = true }
cumulus-pallet-session-benchmarking = {workspace = true }
cumulus-pallet-xcm = { workspace = true }
cumulus-pallet-xcmp-queue = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-timestamp = { workspace = true }
cumulus-primitives-aura = { workspace = true }
cumulus-primitives-utility = { workspace = true }
pallet-collator-selection = { workspace = true }
parachain-info = { workspace = true }
parachains-common = { workspace = true  }

# ismp modules
ismp = { workspace = true  }
pallet-ismp = { workspace = true, features = ["unsigned"]  }
pallet-ismp-demo = { workspace = true  }
pallet-ismp-runtime-api = { workspace = true  }
ismp-parachain = { workspace = true  }
ismp-parachain-runtime-api = { workspace = true  }
ismp-sync-committee = { workspace = true  }
ismp-bsc = { workspace = true  }
ismp-grandpa = { workspace = true }
pallet-ismp-relayer = { workspace = true  }
pallet-ismp-host-executive = { workspace = true  }
pallet-call-decompressor = { workspace = true }
pallet-xcm-gateway = { workspace = true  }
pallet-token-governor = { workspace = true }
pallet-fishermen = { workspace = true  }
pallet-state-coprocessor = { workspace = true }
pallet-token-gateway-inspector = { workspace = true  }

pallet-mmr = { workspace = true }
pallet-mmr-runtime-api = { workspace = true }
sp-mmr-primitives = { workspace = true }
hyperbridge-client-machine = { workspace = true }

simnode-runtime-api = { workspace = true }

[features]
default = [
	"std",
]
std = [
	"codec/std",
	"log/std",
	"scale-info/std",
	"ismp/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-dmp-queue/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-aura/std",
	"cumulus-primitives-timestamp/std",
	"cumulus-primitives-utility/std",
	"pallet-utility/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"pallet-aura/std",
	"pallet-authorship/std",
	"pallet-balances/std",
	"pallet-collator-selection/std",
	"pallet-session/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-xcm/std",
	"pallet-ismp/std",
	"pallet-ismp-runtime-api/std",
	"pallet-ismp-demo/std",
	"parachain-info/std",
	"pallet-treasury/std",
	"pallet-asset-rate/std",
	"pallet-collective/std",
	"polkadot-parachain-primitives/std",
	"polkadot-runtime-common/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-io/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"sp-storage/std",
	"staging-xcm-builder/std",
	"staging-xcm-executor/std",
	"staging-xcm/std",
	"ismp-sync-committee/std",
	"pallet-message-queue/std",
	"parachains-common/std",
	"sp-genesis-builder/std",
	"ismp-bsc/std",
	"ismp-parachain/std",
	"ismp-parachain-runtime-api/std",
	"pallet-ismp-relayer/std",
	"pallet-ismp-host-executive/std",
	"pallet-call-decompressor/std",
	"pallet-xcm-gateway/std",
	"pallet-token-governor/std",
	"pallet-assets/std",
	"pallet-mmr/std",
	"orml-xcm-support/std",
	"orml-traits/std",
	"pallet-mmr-runtime-api/std",
	"sp-mmr-primitives/std",
	"simnode-runtime-api/std",
	"hyperbridge-client-machine/std",
	"frame-metadata-hash-extension/std",
	"anyhow/std",
	"pallet-token-gateway-inspector/std",
	"pallet-fishermen/std",
	"pallet-state-coprocessor/std",
	"ismp-grandpa/std",
	"pallet-multisig/std",
	"pallet-proxy/std"
]

runtime-benchmarks = [
	"hex-literal",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-collator-selection/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-asset-rate/runtime-benchmarks",
	"staging-xcm-builder/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"cumulus-pallet-session-benchmarking/runtime-benchmarks",
	"cumulus-pallet-parachain-system/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"parachains-common/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"ismp-grandpa/runtime-benchmarks"
]

try-runtime = [
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-dmp-queue/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"frame-executive/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-collator-selection/try-runtime",
	"pallet-ismp/try-runtime",
	"ismp-sync-committee/try-runtime",
	"pallet-ismp-demo/try-runtime",
	"pallet-ismp-relayer/try-runtime",
	"pallet-ismp-host-executive/try-runtime",
	"pallet-session/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-xcm/try-runtime",
	"parachain-info/try-runtime",
]

# This must be used when building for a runtime upgrade so metadata hash verification is possible
metadata-hash = ["substrate-wasm-builder/metadata-hash"]
