/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_jschainconfig_free(a: number): void;
export function __wbg_get_jschainconfig_rpc_url(a: number, b: number): void;
export function __wbg_set_jschainconfig_rpc_url(a: number, b: number, c: number): void;
export function __wbg_get_jschainconfig_state_machine(a: number, b: number): void;
export function __wbg_set_jschainconfig_state_machine(a: number, b: number, c: number): void;
export function __wbg_get_jschainconfig_host_address(a: number, b: number): void;
export function __wbg_set_jschainconfig_host_address(a: number, b: number, c: number): void;
export function __wbg_get_jschainconfig_handler_address(a: number, b: number): void;
export function __wbg_set_jschainconfig_handler_address(a: number, b: number, c: number): void;
export function __wbg_get_jschainconfig_consensus_state_id(a: number, b: number): void;
export function __wbg_set_jschainconfig_consensus_state_id(a: number, b: number, c: number): void;
export function __wbg_jshyperbridgeconfig_free(a: number): void;
export function __wbg_jsclientconfig_free(a: number): void;
export function __wbg_get_jsclientconfig_source(a: number): number;
export function __wbg_set_jsclientconfig_source(a: number, b: number): void;
export function __wbg_get_jsclientconfig_dest(a: number): number;
export function __wbg_set_jsclientconfig_dest(a: number, b: number): void;
export function __wbg_get_jsclientconfig_hyperbridge(a: number): number;
export function __wbg_set_jsclientconfig_hyperbridge(a: number, b: number): void;
export function __wbg_jspost_free(a: number): void;
export function __wbg_get_jspost_source(a: number, b: number): void;
export function __wbg_set_jspost_source(a: number, b: number, c: number): void;
export function __wbg_get_jspost_dest(a: number, b: number): void;
export function __wbg_set_jspost_dest(a: number, b: number, c: number): void;
export function __wbg_get_jspost_nonce(a: number): number;
export function __wbg_set_jspost_nonce(a: number, b: number): void;
export function __wbg_get_jspost_from(a: number, b: number): void;
export function __wbg_set_jspost_from(a: number, b: number, c: number): void;
export function __wbg_get_jspost_to(a: number, b: number): void;
export function __wbg_set_jspost_to(a: number, b: number, c: number): void;
export function __wbg_get_jspost_timeout_timestamp(a: number): number;
export function __wbg_set_jspost_timeout_timestamp(a: number, b: number): void;
export function __wbg_get_jspost_data(a: number, b: number): void;
export function __wbg_set_jspost_data(a: number, b: number, c: number): void;
export function __wbg_get_jspost_gas_limit(a: number): number;
export function __wbg_set_jspost_gas_limit(a: number, b: number): void;
export function __wbg_jsresponse_free(a: number): void;
export function __wbg_get_jsresponse_post(a: number): number;
export function __wbg_set_jsresponse_post(a: number, b: number): void;
export function __wbg_get_jsresponse_response(a: number, b: number): void;
export function __wbg_set_jsresponse_response(a: number, b: number, c: number): void;
export function __wbg_set_jsresponse_timeout_timestamp(a: number, b: number): void;
export function __wbg_set_jsresponse_gas_limit(a: number, b: number): void;
export function __wbg_set_jshyperbridgeconfig_rpc_url(a: number, b: number, c: number): void;
export function __wbg_get_jsresponse_timeout_timestamp(a: number): number;
export function __wbg_get_jsresponse_gas_limit(a: number): number;
export function __wbg_get_jshyperbridgeconfig_rpc_url(a: number, b: number): void;
export function query_request_status(a: number, b: number): number;
export function query_response_status(a: number, b: number): number;
export function timeout_post_request(a: number, b: number): number;
export function subscribe_to_request_status(a: number, b: number, c: number): number;
export function __wbg_intounderlyingsink_free(a: number): void;
export function intounderlyingsink_write(a: number, b: number): number;
export function intounderlyingsink_close(a: number): number;
export function intounderlyingsink_abort(a: number, b: number): number;
export function __wbg_intounderlyingsource_free(a: number): void;
export function intounderlyingsource_pull(a: number, b: number): number;
export function intounderlyingsource_cancel(a: number): void;
export function __wbg_intounderlyingbytesource_free(a: number): void;
export function intounderlyingbytesource_type(a: number, b: number): void;
export function intounderlyingbytesource_autoAllocateChunkSize(a: number): number;
export function intounderlyingbytesource_start(a: number, b: number): void;
export function intounderlyingbytesource_pull(a: number, b: number): number;
export function intounderlyingbytesource_cancel(a: number): void;
export function rustsecp256k1_v0_9_2_context_create(a: number): number;
export function rustsecp256k1_v0_9_2_context_destroy(a: number): void;
export function rustsecp256k1_v0_9_2_default_illegal_callback_fn(a: number, b: number): void;
export function rustsecp256k1_v0_9_2_default_error_callback_fn(a: number, b: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h779f85bbaadeee15(a: number, b: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h65ddd0d8d0aebe40(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h76f6c031be756281(a: number, b: number): void;
export function wasm_bindgen__convert__closures__invoke0_mut__hf63ee2387a1d1b72(a: number, b: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h117477c3333ccafe(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h2565e20f67d19d70(a: number, b: number, c: number, d: number): void;
